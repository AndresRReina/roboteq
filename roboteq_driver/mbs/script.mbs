SCRIPT_VER=17
MAX_CHANNELS=2
Dim last_mode[2] as Integer

' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file

setconfig(_ECHOF, 1) ' Serial echo off (p195)
setconfig(_RWD, 110) ' Watchdog timeout, milliseconds (p195)
setconfig(_AMOD, 1, 1) ' Analog input 1 absolute mode
setconfig(_AMOD, 2, 1) ' Analog input 2 absolute mode

' Undervoltage/overvoltage limits (p214)
setconfig(_OVL, 700)
setconfig(_UVL, 280)

' Per-channel configuration
for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
	' Encoder, speed config (p208, p221)
	setconfig(_EMOD, ch, 50)
	setconfig(_EPPR, ch, 1024)
	setconfig(_MXRPM, ch, 3500)
	
	' Current limit (p216)
	setconfig(_ALIM, ch, 1500)
	setconfig(_ATGA, ch, 2000)
	setconfig(_ATGD, ch, 50)
	setconfig(_ATRIG, ch, 0)
	
	' Max acceleration/deceleration (p219)
	setconfig(_MAC, ch, 20000)
	setconfig(_MDEC, ch, 20000)
	
	' No encoder fault detection
	setconfig(_CLERD, ch, 0)
	
	' Set speed mode with no last_mode, so that initialization is triggered.
	last_mode[ch] = 255
	setcommand(_VAR, ch, 0)
next

top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
		if last_mode[ch] <> getvalue(_VAR, ch) then
			last_mode[ch] = getvalue(_VAR, ch)
			if getvalue(_VAR, ch) = 0 then
				setconfig(_MMOD, ch, 1)
				setconfig(_KP, ch, 20)
				setconfig(_KI, ch, 40)
				setconfig(_KD, ch, 10)
				setconfig(_ICAP, ch, 100)
			end if
			if getvalue(_VAR, ch) = 1 then
				setconfig(_MMOD, ch, 3)
				setconfig(_KP, ch, 4)
				setconfig(_KI, ch, 2)
				setconfig(_KD, ch, 0)
				setconfig(_ICAP, ch, 10)
			end if
		end if
		
		if getvalue(_BOOL, ch) = 1 then
			GoSub PrintFeedback  ' 25 Hz
		end if
	next
	c++
	if c = 5 then
		GoSub PrintStatus  ' 5 Hz
		c = 0
	end if
	wait(19)
	goto top

PrintFeedback:
	print("&f:", ch)
	print(":", getvalue(_MOTAMPS, ch))
	print(":", getvalue(_MOTCMD, ch))
	print(":", getvalue(_MOTPWR, ch))
	print(":", getvalue(_ABSPEED, ch))
	print(":", getvalue(_ABCNTR, ch))
	print(":", getvalue(_VOLTS, 2))
	print(":", getvalue(_BATAMPS, ch))
	print(":", getvalue(_ANAIN, ch))
	print(":", getvalue(_TEMP, ch+1))
	print("\r")
	Return
	
PrintStatus:
	print("&s:", SCRIPT_VER)
	print(":", getvalue(_FLTFLAG))
	print(":", getvalue(_STFLAG))
	print(":", getvalue(_VOLTS, 1))
	print(":", getvalue(_VOLTS, 3))
	print(":", getvalue(_TEMP, 1))
	print("\r")
	Return
